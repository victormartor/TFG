package gui;

import Data.Clases.Pedido;
import Data.Modelos.PedidoTableModel;
import java.awt.Frame;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * Ventana desde la que se pueden ver los pedidos realizados.
 *
 * @author Víctor Martín Torres - 12/06/2018
 * @see Pedido
 * @see PedidoTableModel
 */
public class IfrPedidosRealizados extends javax.swing.JFrame 
{
    /**
     * Crea una nueva interfaz con una tabla mostrando los datos de los pedidos
     * existentes.
     * @throws SQLException Error al leer la base de datos.
     */
    public IfrPedidosRealizados() throws SQLException  
    {
        initComponents();
        
        //Obtener todos los pedidos de la tabla Pedido
        ArrayList<Pedido> aPedidos = Pedido.Select(null, null, null, null, null);
        tablePedidos.setModel(new PedidoTableModel(aPedidos));
        TableRowSorter<TableModel> sorter = 
                new TableRowSorter<>(tablePedidos.getModel());
        tablePedidos.setRowSorter(sorter);
        
        //Si se hace doble click en un pedido abre la interfaz de Pedido
        tablePedidos.addMouseListener(new java.awt.event.MouseAdapter() 
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if(e.getClickCount()==2)
                {
                   ver_pedido();
                }
           }
        });
    }
    
    //MÉTODOS PRIVADOS//////////////////////////////////////////////////////////
    
    //Ver pedido
    private void ver_pedido()
    {
        int index = tablePedidos.getSelectedRow();
        
        if(index != -1)
        {
            Pedido pedido = ((PedidoTableModel)tablePedidos.getModel())
                    .getData(index);
                  
            java.awt.EventQueue.invokeLater(() -> {
                try {
                    Frame ifrPedido = new IfrPedido(null, pedido);
                    ifrPedido.setBackground(java.awt.Color.white);
                    ifrPedido.setLocationRelativeTo(this);
                    ifrPedido.setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, 
                    "Error al leer el pedido.\n"+ex.toString(), 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                }
            });
            this.dispose();
        }
    }
    ////////////////////////////////////////////////////////////////////////////

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePedidos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pedidos realizados");

        tablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Fecha", "NumArtículos", "Total", "Código Postal", "Dirección Envío"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePedidos;
    // End of variables declaration//GEN-END:variables
}
