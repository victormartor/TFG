/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Data.Clases.Imagen;
import Data.Clases.Marca;
import Data.Renders.ListaRender;
import Data.Modelos.ModMarcas;
import java.awt.Frame;
import static java.awt.Frame.NORMAL;
import java.awt.Image;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author victor
 */
public class IfrMarca extends javax.swing.JFrame {
    
    private static ModMarcas _modMarcas;
    
    /**
     * Creates new form IfrMarca
     * @throws java.lang.Exception
     */
    public IfrMarca() throws Exception {
        initComponents();
        _modMarcas = new ModMarcas();
        listMarcas.setModel(_modMarcas);
        listMarcas.setCellRenderer(new ListaRender());
        
        listMarcas.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent e) {
                if(e.getClickCount()==2){
                   modificarMarca();
                }
           }
        });
    }
    
    private void modificarMarca(){
        int iIndex = listMarcas.getSelectedIndex();
        Marca marca = _modMarcas.getMarca(iIndex);

        java.awt.EventQueue.invokeLater(() -> {
            Frame frmMarca = null;
            try {
                frmMarca = new FrmMarca(marca.getId());
            } catch (Exception ex) {
                System.out.println("Error al buscar la marca en la base de datos. "+ ex.toString());
            }
            if(frmMarca != null){
                frmMarca.setLocationRelativeTo(IfrMarca.this);
                frmMarca.setVisible(true);
            }
            this.dispose();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listMarcas = new javax.swing.JList<>();
        butAddMarca = new javax.swing.JButton();
        butRemoveMarca = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Marcas");
        setResizable(false);

        listMarcas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listMarcas);

        butAddMarca.setText("Agregar");
        butAddMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddMarcaActionPerformed(evt);
            }
        });

        butRemoveMarca.setText("Eliminar");
        butRemoveMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveMarcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butAddMarca, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butRemoveMarca, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butAddMarca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(butRemoveMarca)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butRemoveMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveMarcaActionPerformed
        int index = listMarcas.getSelectedIndex();
        
        if(index != -1)
        {
            Object[] options = {"Sí",
                                "No"};
            int n = JOptionPane.showOptionDialog(this,
                "¿Está seguro? Se eliminarán además todos los artículos de esta marca."
                        + "\n Esta acción no se puede deshacer.",
                "Eliminar marca",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,     //do not use a custom Icon
                options,  //the titles of buttons
                options[0]); //default button title

            if(n == 0)
            {
                try {
                    _modMarcas.removeMarca(index);
                } catch (Exception ex) {
                    System.out.println("Error en la eliminación de la marca. "+ ex.toString());
                }
            }
        }
    }//GEN-LAST:event_butRemoveMarcaActionPerformed

    private void butAddMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddMarcaActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            Frame frmMarca = null;
            try {
                frmMarca = new FrmMarca(null);
            } catch (Exception ex) {
                System.out.println("Error al crear una marca vacía en la base de datos. "+ ex.toString());
            }
            if(frmMarca != null){
                frmMarca.setLocationRelativeTo(IfrMarca.this);
                frmMarca.setVisible(true);
            }
            this.dispose();
        });  
    }//GEN-LAST:event_butAddMarcaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IfrMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IfrMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IfrMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IfrMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            IfrMarca ifrMarca = null;
            try {
                ifrMarca = new IfrMarca();
            } catch (Exception ex) {
                System.out.println("Error al leer las marcas. "+ex.toString());
            }
            if(ifrMarca != null){
                ifrMarca.setLocationRelativeTo(null);
                ifrMarca.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddMarca;
    private javax.swing.JButton butRemoveMarca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listMarcas;
    // End of variables declaration//GEN-END:variables
}
